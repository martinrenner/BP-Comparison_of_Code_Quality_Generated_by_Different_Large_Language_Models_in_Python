Testing module: chatgpt
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 88 items

generated/code/calculator/6-role-few_shot/iteration_7/5_functional_correctness-chatgpt.py . [  1%]
........................................................................ [ 82%]
....FF.........                                                          [100%]

=================================== FAILURES ===================================
___________________________ test_general_parentheses ___________________________

calc = <chatgpt.Calculator object at 0x102158380>

    def test_general_parentheses(calc):
        assert calc.calculate("(5+2)*3") == 21
        assert calc.calculate("5*(2+3)") == 25
>       assert calc.calculate("-(5+2)*3") == -21

generated/code/calculator/6-role-few_shot/iteration_7/5_functional_correctness-chatgpt.py:735: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/6-role-few_shot/iteration_7/chatgpt.py:34: in calculate
    return self._evaluate_postfix(postfix_tokens)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x102158380>
tokens = ['5', '2', '+', '3', '*', '-']

    def _evaluate_postfix(self, tokens: list) -> float:
        """
        Evaluates a postfix (RPN) expression and returns the result.
    
        Args:
            tokens (list): List of tokens in postfix notation.
    
        Returns:
            float: The result of the evaluated expression.
    
        Raises:
            ValueError: If the expression is invalid.
            ZeroDivisionError: If a division by zero occurs.
        """
        stack = []
        for token in tokens:
            if self._is_number(token):
                try:
                    stack.append(float(token))
                except ValueError:
                    raise ValueError(f"Invalid number encountered: {token}")
            else:
                if len(stack) < 2:
>                   raise ValueError("Invalid expression structure.")
E                   ValueError: Invalid expression structure.

generated/code/calculator/6-role-few_shot/iteration_7/chatgpt.py:220: ValueError
___________________________ test_nested_parentheses ____________________________

calc = <chatgpt.Calculator object at 0x1021556d0>

    def test_nested_parentheses(calc):
        assert calc.calculate("((2+3)*2)") == 10
        assert calc.calculate("((2+3)*(2+3))") == 25
>       assert calc.calculate("-((2+3)*((2+3)*2))") == -50

generated/code/calculator/6-role-few_shot/iteration_7/5_functional_correctness-chatgpt.py:746: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/6-role-few_shot/iteration_7/chatgpt.py:34: in calculate
    return self._evaluate_postfix(postfix_tokens)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x1021556d0>
tokens = ['2', '3', '+', '2', '3', '+', ...]

    def _evaluate_postfix(self, tokens: list) -> float:
        """
        Evaluates a postfix (RPN) expression and returns the result.
    
        Args:
            tokens (list): List of tokens in postfix notation.
    
        Returns:
            float: The result of the evaluated expression.
    
        Raises:
            ValueError: If the expression is invalid.
            ZeroDivisionError: If a division by zero occurs.
        """
        stack = []
        for token in tokens:
            if self._is_number(token):
                try:
                    stack.append(float(token))
                except ValueError:
                    raise ValueError(f"Invalid number encountered: {token}")
            else:
                if len(stack) < 2:
>                   raise ValueError("Invalid expression structure.")
E                   ValueError: Invalid expression structure.

generated/code/calculator/6-role-few_shot/iteration_7/chatgpt.py:220: ValueError
=========================== short test summary info ============================
FAILED generated/code/calculator/6-role-few_shot/iteration_7/5_functional_correctness-chatgpt.py::test_general_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_7/5_functional_correctness-chatgpt.py::test_nested_parentheses
========================= 2 failed, 86 passed in 0.22s =========================
