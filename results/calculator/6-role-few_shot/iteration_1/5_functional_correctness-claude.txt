Testing module: claude
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 88 items

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py . [  1%]
.............FF........FFF.FF....FFFF........FF..FF............FF....FF. [ 82%]
...FF...FFFF.FF                                                          [100%]

=================================== FAILURES ===================================
____________________________ test_subtract_negative ____________________________

calc = <claude.Calculator object at 0x107178f80>

    def test_subtract_negative(calc):
>       assert calc.calculate("5-+3") == 2
E       AssertionError: assert 8.0 == 2
E        +  where 8.0 = calculate('5-+3')
E        +    where calculate = <claude.Calculator object at 0x107178f80>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:123: AssertionError
_________________________ test_subtract_negative_float _________________________

calc = <claude.Calculator object at 0x107172ab0>

    def test_subtract_negative_float(calc):
>       assert calc.calculate("5.5-+3.5") == 2
E       AssertionError: assert 9.0 == 2
E        +  where 9.0 = calculate('5.5-+3.5')
E        +    where calculate = <claude.Calculator object at 0x107172ab0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:131: AssertionError
____________________________ test_multiply_negative ____________________________

calc = <claude.Calculator object at 0x107172ba0>

    def test_multiply_negative(calc):
>       assert calc.calculate("2*-3") == -6
E       AssertionError: assert -1.0 == -6
E        +  where -1.0 = calculate('2*-3')
E        +    where calculate = <claude.Calculator object at 0x107172ba0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:196: AssertionError
______________________ test_multiply_negative_parentheses ______________________

calc = <claude.Calculator object at 0x107172210>

    def test_multiply_negative_parentheses(calc):
        assert calc.calculate("2*(-3)") == -6
        assert calc.calculate("(-2)*3") == -6
        assert calc.calculate("(-2)*(-3)") == 6
        assert calc.calculate("(-1000000000)*(-2000000000)") == 2e18
>       assert calc.calculate("(-999999999999999)*-1") == 999999999999999
E       AssertionError: assert -1000000000000000.0 == 999999999999999
E        +  where -1000000000000000.0 = calculate('(-999999999999999)*-1')
E        +    where calculate = <claude.Calculator object at 0x107172210>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:208: AssertionError
_________________________ test_multiply_negative_float _________________________

calc = <claude.Calculator object at 0x107179490>

    def test_multiply_negative_float(calc):
>       assert calc.calculate("2.5*-3.5") == -8.75
E       AssertionError: assert -1.0 == -8.75
E        +  where -1.0 = calculate('2.5*-3.5')
E        +    where calculate = <claude.Calculator object at 0x107179490>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:212: AssertionError
____________________________ test_multiply_neutral _____________________________

calc = <claude.Calculator object at 0x107170170>

    def test_multiply_neutral(calc):
        assert calc.calculate("0*0") == 0
        assert calc.calculate("0*5") == 0
        assert calc.calculate("5*0") == 0
>       assert calc.calculate("0*-5") == 0
E       AssertionError: assert -5.0 == 0
E        +  where -5.0 = calculate('0*-5')
E        +    where calculate = <claude.Calculator object at 0x107170170>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:237: AssertionError
_________________________ test_multiply_neutral_float __________________________

calc = <claude.Calculator object at 0x107171520>

    def test_multiply_neutral_float(calc):
        assert calc.calculate("0.0*0.0") == 0
        assert calc.calculate("0.0*5.0") == 0
        assert calc.calculate("5.0*0.0") == 0
>       assert calc.calculate("0.0*-5.0") == 0
E       AssertionError: assert -5.0 == 0
E        +  where -5.0 = calculate('0.0*-5.0')
E        +    where calculate = <claude.Calculator object at 0x107171520>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:245: AssertionError
_____________________________ test_divide_negative _____________________________

calc = <claude.Calculator object at 0x107172ba0>

    def test_divide_negative(calc):
>       assert calc.calculate("6/-3") == -2
E       AssertionError: assert 3.0 == -2
E        +  where 3.0 = calculate('6/-3')
E        +    where calculate = <claude.Calculator object at 0x107172ba0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:281: AssertionError
__________________________ test_divide_negative_float __________________________

calc = <claude.Calculator object at 0x107170e90>

    def test_divide_negative_float(calc):
>       assert calc.calculate("6.5/-3.5") == pytest.approx(-1.8571428, rel=1e-6)
E       assert 3.0 == -1.8571428 ± 1.9e-06
E         
E         comparison failed
E         Obtained: 3.0
E         Expected: -1.8571428 ± 1.9e-06

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:289: AssertionError
_______________________ test_divide_negative_parentheses _______________________

calc = <claude.Calculator object at 0x1071703b0>

    def test_divide_negative_parentheses(calc):
        assert calc.calculate("6/(-3)") == -2
        assert calc.calculate("(-6)/3") == -2
        assert calc.calculate("(-6)/(-3)") == 2
        assert calc.calculate("(-1000000000)/(-2000000000)") == 0.5
>       assert calc.calculate("(999999999999999)/-1") == -999999999999999
E       AssertionError: assert 999999999999998.0 == -999999999999999
E        +  where 999999999999998.0 = calculate('(999999999999999)/-1')
E        +    where calculate = <claude.Calculator object at 0x1071703b0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:301: AssertionError
____________________ test_divide_negative_float_parentheses ____________________

calc = <claude.Calculator object at 0x1071298b0>

    def test_divide_negative_float_parentheses(calc):
        assert calc.calculate("6.5/(-3.5)") == pytest.approx(-1.8571428, rel=1e-6)
        assert calc.calculate("(-6.5)/3.5") == pytest.approx(-1.8571428, rel=1e-6)
        assert calc.calculate("(-6.5)/(-3.5)") == pytest.approx(1.8571428, rel=1e-6)
        assert calc.calculate("(-1000000000)/(-0.5)") == 2000000000
>       assert calc.calculate("(-999999999999999)/-0.1") == pytest.approx(1e16, rel=1e-6)
E       assert -999999999999999.1 == 1e+16 ± 1.0e+10
E         
E         comparison failed
E         Obtained: -999999999999999.1
E         Expected: 1e+16 ± 1.0e+10

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:309: AssertionError
__________________________ test_add_multiply_positive __________________________

calc = <claude.Calculator object at 0x107129fd0>

    def test_add_multiply_positive(calc):
        assert calc.calculate("5+2*3") == 11
        assert calc.calculate("5*2+3") == 13
        assert calc.calculate("-5+2*3") == 1
>       assert calc.calculate("-5*-2+3") == 13
E       AssertionError: assert -4.0 == 13
E        +  where -4.0 = calculate('-5*-2+3')
E        +    where calculate = <claude.Calculator object at 0x107129fd0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:380: AssertionError
_______________________ test_add_multiply_positive_float _______________________

calc = <claude.Calculator object at 0x10712b830>

    def test_add_multiply_positive_float(calc):
        assert calc.calculate("5.5+2.5*3.5") == 14.25
        assert calc.calculate("5.5*2.5+3.5") == 17.25
        assert calc.calculate("-5.5+2.5*3.5") == 3.25
>       assert calc.calculate("-5.5*-2.5+3.5") == 17.25
E       AssertionError: assert -4.5 == 17.25
E        +  where -4.5 = calculate('-5.5*-2.5+3.5')
E        +    where calculate = <claude.Calculator object at 0x10712b830>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:391: AssertionError
____________________ test_add_multiply_negative_parentheses ____________________

calc = <claude.Calculator object at 0x10712b530>

    def test_add_multiply_negative_parentheses(calc):
        assert calc.calculate("5+(-2)*3") == -1
        assert calc.calculate("(-5)+2*3") == 1
        assert calc.calculate("(-5)*(-2)+3") == 13
        assert calc.calculate("(-1000000000)*2000000000+3000000000") == pytest.approx(
            -2e18, rel=1e-6
        )
>       assert calc.calculate("999999999999999*-1+999999999999999") == 0
E       AssertionError: assert 1999999999999997.0 == 0
E        +  where 1999999999999997.0 = calculate('999999999999999*-1+999999999999999')
E        +    where calculate = <claude.Calculator object at 0x10712b530>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:425: AssertionError
_________________ test_add_multiply_negative_float_parentheses _________________

calc = <claude.Calculator object at 0x10712ade0>

    def test_add_multiply_negative_float_parentheses(calc):
        assert calc.calculate("5.5+(-2.5)*3.5") == -3.25
        assert calc.calculate("(-5.5)+2.5*3.5") == 3.25
        assert calc.calculate("(-5.5)*(-2.5)+3.5") == 17.25
        assert calc.calculate("(-1000000000.5)*2000000000+(3000000000.5)") == pytest.approx(
            -2e18, rel=1e-6
        )
>       assert calc.calculate("(999999999999999.5)*-1+999999999999999") == -0.5
E       AssertionError: assert 1999999999999997.5 == -0.5
E        +  where 1999999999999997.5 = calculate('(999999999999999.5)*-1+999999999999999')
E        +    where calculate = <claude.Calculator object at 0x10712ade0>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:435: AssertionError
_____________________________ test_subtract_divide _____________________________

calc = <claude.Calculator object at 0x107128b30>

    def test_subtract_divide(calc):
        assert calc.calculate("5-2/3") == pytest.approx(4.3333333, rel=1e-6)
        assert calc.calculate("5/2-3") == pytest.approx(-0.5, rel=1e-6)
        assert calc.calculate("-5-2/3") == pytest.approx(-5.666666666, rel=1e-6)
>       assert calc.calculate("-5/-2/3") == pytest.approx(0.833333333, rel=1e-6)
E       assert -5.666666666666667 == 0.833333333 ± 8.3e-07
E         
E         comparison failed
E         Obtained: -5.666666666666667
E         Expected: 0.833333333 ± 8.3e-07

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:583: AssertionError
__________________________ test_subtract_divide_float __________________________

calc = <claude.Calculator object at 0x10712a570>

    def test_subtract_divide_float(calc):
        assert calc.calculate("5.5-2.5/3.5") == pytest.approx(4.7857142, rel=1e-6)
        assert calc.calculate("5.5/2.5-3.5") == pytest.approx(-1.3, rel=1e-6)
        assert calc.calculate("-5.5-2.5/3.5") == pytest.approx(-6.21428571, rel=1e-6)
>       assert calc.calculate("-5.5/-2.5/3.5") == pytest.approx(0.628571428, rel=1e-6)
E       assert -6.214285714285714 == 0.628571428 ± 6.3e-07
E         
E         comparison failed
E         Obtained: -6.214285714285714
E         Expected: 0.628571428 ± 6.3e-07

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:596: AssertionError
____________________________ test_subtract_multiply ____________________________

calc = <claude.Calculator object at 0x10712a030>

    def test_subtract_multiply(calc):
        assert calc.calculate("5-2*3") == -1
        assert calc.calculate("5*2-3") == 7
        assert calc.calculate("-5-2*3") == -11
>       assert calc.calculate("-5*-2*3") == 30
E       AssertionError: assert -11.0 == 30
E        +  where -11.0 = calculate('-5*-2*3')
E        +    where calculate = <claude.Calculator object at 0x10712a030>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:660: AssertionError
_________________________ test_subtract_multiply_float _________________________

calc = <claude.Calculator object at 0x107128ef0>

    def test_subtract_multiply_float(calc):
        assert calc.calculate("5.5-2.5*3.5") == -3.25
        assert calc.calculate("5.5*2.5-3.5") == 10.25
        assert calc.calculate("-5.5-2.5*3.5") == -14.25
>       assert calc.calculate("-5.5*-2.5*3.5") == pytest.approx(48.125, rel=1e-6)
E       assert -14.25 == 48.125 ± 4.8e-05
E         
E         comparison failed
E         Obtained: -14.25
E         Expected: 48.125 ± 4.8e-05

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:671: AssertionError
_____________________________ test_all_operations ______________________________

calc = <claude.Calculator object at 0x1071704a0>

    def test_all_operations(calc):
        assert calc.calculate("5+2*3-4/2") == 9
        assert calc.calculate("5-2/3*4+1") == pytest.approx(3.3333333, rel=1e-6)
        assert calc.calculate("-5*2+3/3") == -9
>       assert calc.calculate("-5*-2/3+5") == pytest.approx(8.33333333, rel=1e-6)
E       assert -0.6666666666666666 == 8.33333333 ± 8.3e-06
E         
E         comparison failed
E         Obtained: -0.6666666666666666
E         Expected: 8.33333333 ± 8.3e-06

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:725: AssertionError
___________________________ test_general_parentheses ___________________________

calc = <claude.Calculator object at 0x107171250>

    def test_general_parentheses(calc):
        assert calc.calculate("(5+2)*3") == 21
        assert calc.calculate("5*(2+3)") == 25
        assert calc.calculate("-(5+2)*3") == -21
>       assert calc.calculate("-(5+2)*-3") == 21
E       AssertionError: assert -10.0 == 21
E        +  where -10.0 = calculate('-(5+2)*-3')
E        +    where calculate = <claude.Calculator object at 0x107171250>.calculate

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:736: AssertionError
_________________ test_invalid_expression_incomplete_addition __________________

calc = <claude.Calculator object at 0x1071709e0>

    def test_invalid_expression_incomplete_addition(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:777: Failed
______________ test_invalid_expression_incomplete_multiplication _______________

calc = <claude.Calculator object at 0x107178830>

    def test_invalid_expression_incomplete_multiplication(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:782: Failed
_______________________________ test_empty_input _______________________________

calc = <claude.Calculator object at 0x1071752e0>

    def test_empty_input(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:787: Failed
____________________________ test_empty_parentheses ____________________________

calc = <claude.Calculator object at 0x107122450>

    def test_empty_parentheses(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:792: Failed
__________________________ test_invalid_double_slash ___________________________

calc = <claude.Calculator object at 0x107123b60>

    def test_invalid_double_slash(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:802: Failed
_________________________ test_invalid_exponentiation __________________________

calc = <claude.Calculator object at 0x107123020>

    def test_invalid_exponentiation(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py:807: Failed
=========================== short test summary info ============================
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_negative
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_negative_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_multiply_negative
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_multiply_negative_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_multiply_negative_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_multiply_neutral
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_multiply_neutral_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_divide_negative
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_divide_negative_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_divide_negative_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_divide_negative_float_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_add_multiply_positive
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_add_multiply_positive_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_add_multiply_negative_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_add_multiply_negative_float_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_divide
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_divide_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_multiply
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_subtract_multiply_float
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_all_operations
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_general_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_invalid_expression_incomplete_addition
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_invalid_expression_incomplete_multiplication
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_empty_input
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_empty_parentheses
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_invalid_double_slash
FAILED generated/code/calculator/6-role-few_shot/iteration_1/5_functional_correctness-claude.py::test_invalid_exponentiation
======================== 27 failed, 61 passed in 0.37s =========================
