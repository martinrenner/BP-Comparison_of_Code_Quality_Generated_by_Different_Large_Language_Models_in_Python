Testing module: chatgpt
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 88 items

generated/code/calculator/6-role-few_shot/iteration_5/5_functional_correctness-chatgpt.py . [  1%]
.............FF......................................................... [ 82%]
...............                                                          [100%]

=================================== FAILURES ===================================
____________________________ test_subtract_negative ____________________________

self = <chatgpt.Calculator object at 0x105e392b0>, tokens = ['5', '-', '3', '+']

    def _evaluate_rpn(self, tokens: list) -> float:
        """
        Evaluates an expression in Reverse Polish Notation (RPN).
    
        Args:
            tokens (list): The RPN expression as a list of tokens.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ZeroDivisionError: If a division by zero occurs.
            ValueError: If the RPN expression is invalid.
        """
        stack = []
        for token in tokens:
            try:
                # If token represents a number, push onto the stack.
>               value = float(token)
E               ValueError: could not convert string to float: '-'

generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:201: ValueError

During handling of the above exception, another exception occurred:

calc = <chatgpt.Calculator object at 0x105e392b0>

    def test_subtract_negative(calc):
>       assert calc.calculate("5-+3") == 2

generated/code/calculator/6-role-few_shot/iteration_5/5_functional_correctness-chatgpt.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:34: in calculate
    result = self._evaluate_rpn(rpn)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x105e392b0>, tokens = ['5', '-', '3', '+']

    def _evaluate_rpn(self, tokens: list) -> float:
        """
        Evaluates an expression in Reverse Polish Notation (RPN).
    
        Args:
            tokens (list): The RPN expression as a list of tokens.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ZeroDivisionError: If a division by zero occurs.
            ValueError: If the RPN expression is invalid.
        """
        stack = []
        for token in tokens:
            try:
                # If token represents a number, push onto the stack.
                value = float(token)
                stack.append(value)
            except ValueError:
                # Otherwise, the token must be an operator; pop two numbers.
                if len(stack) < 2:
>                   raise ValueError("Invalid expression.")
E                   ValueError: Invalid expression.

generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:206: ValueError
_________________________ test_subtract_negative_float _________________________

self = <chatgpt.Calculator object at 0x105e352b0>
tokens = ['5.5', '-', '3.5', '+']

    def _evaluate_rpn(self, tokens: list) -> float:
        """
        Evaluates an expression in Reverse Polish Notation (RPN).
    
        Args:
            tokens (list): The RPN expression as a list of tokens.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ZeroDivisionError: If a division by zero occurs.
            ValueError: If the RPN expression is invalid.
        """
        stack = []
        for token in tokens:
            try:
                # If token represents a number, push onto the stack.
>               value = float(token)
E               ValueError: could not convert string to float: '-'

generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:201: ValueError

During handling of the above exception, another exception occurred:

calc = <chatgpt.Calculator object at 0x105e352b0>

    def test_subtract_negative_float(calc):
>       assert calc.calculate("5.5-+3.5") == 2

generated/code/calculator/6-role-few_shot/iteration_5/5_functional_correctness-chatgpt.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:34: in calculate
    result = self._evaluate_rpn(rpn)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x105e352b0>
tokens = ['5.5', '-', '3.5', '+']

    def _evaluate_rpn(self, tokens: list) -> float:
        """
        Evaluates an expression in Reverse Polish Notation (RPN).
    
        Args:
            tokens (list): The RPN expression as a list of tokens.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ZeroDivisionError: If a division by zero occurs.
            ValueError: If the RPN expression is invalid.
        """
        stack = []
        for token in tokens:
            try:
                # If token represents a number, push onto the stack.
                value = float(token)
                stack.append(value)
            except ValueError:
                # Otherwise, the token must be an operator; pop two numbers.
                if len(stack) < 2:
>                   raise ValueError("Invalid expression.")
E                   ValueError: Invalid expression.

generated/code/calculator/6-role-few_shot/iteration_5/chatgpt.py:206: ValueError
=========================== short test summary info ============================
FAILED generated/code/calculator/6-role-few_shot/iteration_5/5_functional_correctness-chatgpt.py::test_subtract_negative
FAILED generated/code/calculator/6-role-few_shot/iteration_5/5_functional_correctness-chatgpt.py::test_subtract_negative_float
========================= 2 failed, 86 passed in 0.22s =========================
