Testing module: claude
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 88 items

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py . [  1%]
.............FF........FFF.FF....FFFF........FFFFFFFFFFFF......FFFFFFFFF [ 82%]
FFFFF...FF.FFFF                                                          [100%]

=================================== FAILURES ===================================
____________________________ test_subtract_negative ____________________________

calc = <claude.Calculator object at 0x103a919d0>

    def test_subtract_negative(calc):
>       assert calc.calculate("5-+3") == 2
E       AssertionError: assert 8.0 == 2
E        +  where 8.0 = calculate('5-+3')
E        +    where calculate = <claude.Calculator object at 0x103a919d0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:123: AssertionError
_________________________ test_subtract_negative_float _________________________

calc = <claude.Calculator object at 0x102747b90>

    def test_subtract_negative_float(calc):
>       assert calc.calculate("5.5-+3.5") == 2
E       AssertionError: assert 9.0 == 2
E        +  where 9.0 = calculate('5.5-+3.5')
E        +    where calculate = <claude.Calculator object at 0x102747b90>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:131: AssertionError
____________________________ test_multiply_negative ____________________________

calc = <claude.Calculator object at 0x102746240>

    def test_multiply_negative(calc):
>       assert calc.calculate("2*-3") == -6
E       AssertionError: assert -1.0 == -6
E        +  where -1.0 = calculate('2*-3')
E        +    where calculate = <claude.Calculator object at 0x102746240>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:196: AssertionError
______________________ test_multiply_negative_parentheses ______________________

calc = <claude.Calculator object at 0x102745d60>

    def test_multiply_negative_parentheses(calc):
        assert calc.calculate("2*(-3)") == -6
        assert calc.calculate("(-2)*3") == -6
        assert calc.calculate("(-2)*(-3)") == 6
        assert calc.calculate("(-1000000000)*(-2000000000)") == 2e18
>       assert calc.calculate("(-999999999999999)*-1") == 999999999999999
E       AssertionError: assert -1000000000000000.0 == 999999999999999
E        +  where -1000000000000000.0 = calculate('(-999999999999999)*-1')
E        +    where calculate = <claude.Calculator object at 0x102745d60>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:208: AssertionError
_________________________ test_multiply_negative_float _________________________

calc = <claude.Calculator object at 0x103a91f70>

    def test_multiply_negative_float(calc):
>       assert calc.calculate("2.5*-3.5") == -8.75
E       AssertionError: assert -1.0 == -8.75
E        +  where -1.0 = calculate('2.5*-3.5')
E        +    where calculate = <claude.Calculator object at 0x103a91f70>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:212: AssertionError
____________________________ test_multiply_neutral _____________________________

calc = <claude.Calculator object at 0x102745820>

    def test_multiply_neutral(calc):
        assert calc.calculate("0*0") == 0
        assert calc.calculate("0*5") == 0
        assert calc.calculate("5*0") == 0
>       assert calc.calculate("0*-5") == 0
E       AssertionError: assert -5.0 == 0
E        +  where -5.0 = calculate('0*-5')
E        +    where calculate = <claude.Calculator object at 0x102745820>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:237: AssertionError
_________________________ test_multiply_neutral_float __________________________

calc = <claude.Calculator object at 0x102745220>

    def test_multiply_neutral_float(calc):
        assert calc.calculate("0.0*0.0") == 0
        assert calc.calculate("0.0*5.0") == 0
        assert calc.calculate("5.0*0.0") == 0
>       assert calc.calculate("0.0*-5.0") == 0
E       AssertionError: assert -5.0 == 0
E        +  where -5.0 = calculate('0.0*-5.0')
E        +    where calculate = <claude.Calculator object at 0x102745220>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:245: AssertionError
_____________________________ test_divide_negative _____________________________

calc = <claude.Calculator object at 0x102747d40>

    def test_divide_negative(calc):
>       assert calc.calculate("6/-3") == -2
E       AssertionError: assert 3.0 == -2
E        +  where 3.0 = calculate('6/-3')
E        +    where calculate = <claude.Calculator object at 0x102747d40>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:281: AssertionError
__________________________ test_divide_negative_float __________________________

calc = <claude.Calculator object at 0x102744980>

    def test_divide_negative_float(calc):
>       assert calc.calculate("6.5/-3.5") == pytest.approx(-1.8571428, rel=1e-6)
E       assert 3.0 == -1.8571428 ± 1.9e-06
E         
E         comparison failed
E         Obtained: 3.0
E         Expected: -1.8571428 ± 1.9e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:289: AssertionError
_______________________ test_divide_negative_parentheses _______________________

calc = <claude.Calculator object at 0x1026fc9e0>

    def test_divide_negative_parentheses(calc):
        assert calc.calculate("6/(-3)") == -2
        assert calc.calculate("(-6)/3") == -2
        assert calc.calculate("(-6)/(-3)") == 2
        assert calc.calculate("(-1000000000)/(-2000000000)") == 0.5
>       assert calc.calculate("(999999999999999)/-1") == -999999999999999
E       AssertionError: assert 999999999999998.0 == -999999999999999
E        +  where 999999999999998.0 = calculate('(999999999999999)/-1')
E        +    where calculate = <claude.Calculator object at 0x1026fc9e0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:301: AssertionError
____________________ test_divide_negative_float_parentheses ____________________

calc = <claude.Calculator object at 0x1026fcb90>

    def test_divide_negative_float_parentheses(calc):
        assert calc.calculate("6.5/(-3.5)") == pytest.approx(-1.8571428, rel=1e-6)
        assert calc.calculate("(-6.5)/3.5") == pytest.approx(-1.8571428, rel=1e-6)
        assert calc.calculate("(-6.5)/(-3.5)") == pytest.approx(1.8571428, rel=1e-6)
        assert calc.calculate("(-1000000000)/(-0.5)") == 2000000000
>       assert calc.calculate("(-999999999999999)/-0.1") == pytest.approx(1e16, rel=1e-6)
E       assert -999999999999999.1 == 1e+16 ± 1.0e+10
E         
E         comparison failed
E         Obtained: -999999999999999.1
E         Expected: 1e+16 ± 1.0e+10

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:309: AssertionError
__________________________ test_add_multiply_positive __________________________

calc = <claude.Calculator object at 0x1026fd5e0>

    def test_add_multiply_positive(calc):
>       assert calc.calculate("5+2*3") == 11
E       AssertionError: assert 21.0 == 11
E        +  where 21.0 = calculate('5+2*3')
E        +    where calculate = <claude.Calculator object at 0x1026fd5e0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:377: AssertionError
_______________________ test_add_multiply_positive_float _______________________

calc = <claude.Calculator object at 0x1026fe7b0>

    def test_add_multiply_positive_float(calc):
>       assert calc.calculate("5.5+2.5*3.5") == 14.25
E       AssertionError: assert 28.0 == 14.25
E        +  where 28.0 = calculate('5.5+2.5*3.5')
E        +    where calculate = <claude.Calculator object at 0x1026fe7b0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:388: AssertionError
____________________ test_add_multiply_positive_parentheses ____________________

calc = <claude.Calculator object at 0x1026ff5c0>

    def test_add_multiply_positive_parentheses(calc):
>       assert calc.calculate("(5)+2*3") == 11
E       AssertionError: assert 21.0 == 11
E        +  where 21.0 = calculate('(5)+2*3')
E        +    where calculate = <claude.Calculator object at 0x1026ff5c0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:399: AssertionError
_________________ test_add_multiply_positive_float_parentheses _________________

calc = <claude.Calculator object at 0x1026fe150>

    def test_add_multiply_positive_float_parentheses(calc):
>       assert calc.calculate("(5.5)+2*3") == 11.5
E       AssertionError: assert 22.5 == 11.5
E        +  where 22.5 = calculate('(5.5)+2*3')
E        +    where calculate = <claude.Calculator object at 0x1026fe150>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:409: AssertionError
____________________ test_add_multiply_negative_parentheses ____________________

calc = <claude.Calculator object at 0x1026fc3e0>

    def test_add_multiply_negative_parentheses(calc):
>       assert calc.calculate("5+(-2)*3") == -1
E       AssertionError: assert 9.0 == -1
E        +  where 9.0 = calculate('5+(-2)*3')
E        +    where calculate = <claude.Calculator object at 0x1026fc3e0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:419: AssertionError
_________________ test_add_multiply_negative_float_parentheses _________________

calc = <claude.Calculator object at 0x1026fd760>

    def test_add_multiply_negative_float_parentheses(calc):
>       assert calc.calculate("5.5+(-2.5)*3.5") == -3.25
E       AssertionError: assert 10.5 == -3.25
E        +  where 10.5 = calculate('5.5+(-2.5)*3.5')
E        +    where calculate = <claude.Calculator object at 0x1026fd760>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:429: AssertionError
_______________________________ test_add_divide ________________________________

calc = <claude.Calculator object at 0x1026ffe00>

    def test_add_divide(calc):
>       assert calc.calculate("5+2/3") == pytest.approx(5.6666666, rel=1e-6)
E       assert 2.3333333333333335 == 5.6666666 ± 5.7e-06
E         
E         comparison failed
E         Obtained: 2.3333333333333335
E         Expected: 5.6666666 ± 5.7e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:442: AssertionError
____________________________ test_add_divide_float _____________________________

calc = <claude.Calculator object at 0x1026fe690>

    def test_add_divide_float(calc):
>       assert calc.calculate("5.5+2.5/3.5") == pytest.approx(6.21428571, rel=1e-6)
E       assert 2.2857142857142856 == 6.21428571 ± 6.2e-06
E         
E         comparison failed
E         Obtained: 2.2857142857142856
E         Expected: 6.21428571 ± 6.2e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:453: AssertionError
_____________________ test_add_divide_positive_parentheses _____________________

calc = <claude.Calculator object at 0x1026ff3b0>

    def test_add_divide_positive_parentheses(calc):
>       assert calc.calculate("(5)+2/3") == pytest.approx(5.66666666, rel=1e-6)
E       assert 2.3333333333333335 == 5.66666666 ± 5.7e-06
E         
E         comparison failed
E         Obtained: 2.3333333333333335
E         Expected: 5.66666666 ± 5.7e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:464: AssertionError
__________________ test_add_divide_positive_float_parentheses __________________

calc = <claude.Calculator object at 0x102747980>

    def test_add_divide_positive_float_parentheses(calc):
>       assert calc.calculate("(5.5)+2/3") == pytest.approx(6.16666666, rel=1e-6)
E       assert 2.5 == 6.16666666 ± 6.2e-06
E         
E         comparison failed
E         Obtained: 2.5
E         Expected: 6.16666666 ± 6.2e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:474: AssertionError
_____________________ test_add_divide_negative_parentheses _____________________

calc = <claude.Calculator object at 0x102746030>

    def test_add_divide_negative_parentheses(calc):
>       assert calc.calculate("5+(-2)/3") == pytest.approx(4.33333333, rel=1e-6)
E       assert 1.0 == 4.33333333 ± 4.3e-06
E         
E         comparison failed
E         Obtained: 1.0
E         Expected: 4.33333333 ± 4.3e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:484: AssertionError
__________________ test_add_divide_negative_float_parentheses __________________

calc = <claude.Calculator object at 0x102744b60>

    def test_add_divide_negative_float_parentheses(calc):
>       assert calc.calculate("5.5+(-2.5)/3.5") == pytest.approx(4.78571428, rel=1e-6)
E       assert 0.8571428571428571 == 4.78571428 ± 4.8e-06
E         
E         comparison failed
E         Obtained: 0.8571428571428571
E         Expected: 4.78571428 ± 4.8e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:494: AssertionError
_____________________________ test_subtract_divide _____________________________

calc = <claude.Calculator object at 0x102748b00>

    def test_subtract_divide(calc):
>       assert calc.calculate("5-2/3") == pytest.approx(4.3333333, rel=1e-6)
E       assert 1.0 == 4.3333333 ± 4.3e-06
E         
E         comparison failed
E         Obtained: 1.0
E         Expected: 4.3333333 ± 4.3e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:580: AssertionError
__________________________ test_subtract_divide_float __________________________

calc = <claude.Calculator object at 0x1026f7d40>

    def test_subtract_divide_float(calc):
>       assert calc.calculate("5.5-2.5/3.5") == pytest.approx(4.7857142, rel=1e-6)
E       assert 0.8571428571428571 == 4.7857142 ± 4.8e-06
E         
E         comparison failed
E         Obtained: 0.8571428571428571
E         Expected: 4.7857142 ± 4.8e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:593: AssertionError
__________________ test_subtract_divide_positive_parentheses ___________________

calc = <claude.Calculator object at 0x1026f6420>

    def test_subtract_divide_positive_parentheses(calc):
>       assert calc.calculate("(5)-2/3") == pytest.approx(4.3333333, rel=1e-6)
E       assert 1.0 == 4.3333333 ± 4.3e-06
E         
E         comparison failed
E         Obtained: 1.0
E         Expected: 4.3333333 ± 4.3e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:606: AssertionError
_______________ test_subtract_divide_positive_float_parentheses ________________

calc = <claude.Calculator object at 0x1026f5af0>

    def test_subtract_divide_positive_float_parentheses(calc):
>       assert calc.calculate("(5.5)-2/3") == pytest.approx(4.83333333, rel=1e-6)
E       assert 1.1666666666666667 == 4.83333333 ± 4.8e-06
E         
E         comparison failed
E         Obtained: 1.1666666666666667
E         Expected: 4.83333333 ± 4.8e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:618: AssertionError
__________________ test_subtract_divide_negative_parentheses ___________________

calc = <claude.Calculator object at 0x1026f73b0>

    def test_subtract_divide_negative_parentheses(calc):
>       assert calc.calculate("5-(-2)/3") == pytest.approx(5.66666666, rel=1e-6)
E       assert 2.3333333333333335 == 5.66666666 ± 5.7e-06
E         
E         comparison failed
E         Obtained: 2.3333333333333335
E         Expected: 5.66666666 ± 5.7e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:630: AssertionError
_______________ test_subtract_divide_negative_float_parentheses ________________

calc = <claude.Calculator object at 0x10274b8f0>

    def test_subtract_divide_negative_float_parentheses(calc):
>       assert calc.calculate("5.5-(-2.5)/3.5") == pytest.approx(6.2142857, rel=1e-6)
E       assert 2.2857142857142856 == 6.2142857 ± 6.2e-06
E         
E         comparison failed
E         Obtained: 2.2857142857142856
E         Expected: 6.2142857 ± 6.2e-06

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:642: AssertionError
____________________________ test_subtract_multiply ____________________________

calc = <claude.Calculator object at 0x103b7b830>

    def test_subtract_multiply(calc):
>       assert calc.calculate("5-2*3") == -1
E       AssertionError: assert 9.0 == -1
E        +  where 9.0 = calculate('5-2*3')
E        +    where calculate = <claude.Calculator object at 0x103b7b830>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:657: AssertionError
_________________________ test_subtract_multiply_float _________________________

calc = <claude.Calculator object at 0x103b7b0b0>

    def test_subtract_multiply_float(calc):
>       assert calc.calculate("5.5-2.5*3.5") == -3.25
E       AssertionError: assert 10.5 == -3.25
E        +  where 10.5 = calculate('5.5-2.5*3.5')
E        +    where calculate = <claude.Calculator object at 0x103b7b0b0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:668: AssertionError
_________________ test_subtract_multiply_positive_parentheses __________________

calc = <claude.Calculator object at 0x103b7a8d0>

    def test_subtract_multiply_positive_parentheses(calc):
>       assert calc.calculate("(5)-2*3") == -1
E       AssertionError: assert 9.0 == -1
E        +  where 9.0 = calculate('(5)-2*3')
E        +    where calculate = <claude.Calculator object at 0x103b7a8d0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:679: AssertionError
______________ test_subtract_multiply_positive_float_parentheses _______________

calc = <claude.Calculator object at 0x103b79fd0>

    def test_subtract_multiply_positive_float_parentheses(calc):
>       assert calc.calculate("(5.5)-2*3") == -0.5
E       AssertionError: assert 10.5 == -0.5
E        +  where 10.5 = calculate('(5.5)-2*3')
E        +    where calculate = <claude.Calculator object at 0x103b79fd0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:689: AssertionError
_________________ test_subtract_multiply_negative_parentheses __________________

calc = <claude.Calculator object at 0x103b794f0>

    def test_subtract_multiply_negative_parentheses(calc):
>       assert calc.calculate("5-(-2)*3") == 11
E       AssertionError: assert 21.0 == 11
E        +  where 21.0 = calculate('5-(-2)*3')
E        +    where calculate = <claude.Calculator object at 0x103b794f0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:699: AssertionError
______________ test_subtract_multiply_negative_float_parentheses _______________

calc = <claude.Calculator object at 0x103b787d0>

    def test_subtract_multiply_negative_float_parentheses(calc):
>       assert calc.calculate("5.5-(-2.5)*3.5") == 14.25
E       AssertionError: assert 28.0 == 14.25
E        +  where 28.0 = calculate('5.5-(-2.5)*3.5')
E        +    where calculate = <claude.Calculator object at 0x103b787d0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:709: AssertionError
_____________________________ test_all_operations ______________________________

calc = <claude.Calculator object at 0x103a93fe0>

    def test_all_operations(calc):
>       assert calc.calculate("5+2*3-4/2") == 9
E       AssertionError: assert 8.5 == 9
E        +  where 8.5 = calculate('5+2*3-4/2')
E        +    where calculate = <claude.Calculator object at 0x103a93fe0>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:722: AssertionError
___________________________ test_general_parentheses ___________________________

calc = <claude.Calculator object at 0x10274a840>

    def test_general_parentheses(calc):
        assert calc.calculate("(5+2)*3") == 21
        assert calc.calculate("5*(2+3)") == 25
        assert calc.calculate("-(5+2)*3") == -21
>       assert calc.calculate("-(5+2)*-3") == 21
E       AssertionError: assert -10.0 == 21
E        +  where -10.0 = calculate('-(5+2)*-3')
E        +    where calculate = <claude.Calculator object at 0x10274a840>.calculate

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:736: AssertionError
_________________ test_invalid_expression_incomplete_addition __________________

calc = <claude.Calculator object at 0x1027447a0>

    def test_invalid_expression_incomplete_addition(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:777: Failed
______________ test_invalid_expression_incomplete_multiplication _______________

calc = <claude.Calculator object at 0x102746930>

    def test_invalid_expression_incomplete_multiplication(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:782: Failed
____________________________ test_empty_parentheses ____________________________

calc = <claude.Calculator object at 0x102744830>

    def test_empty_parentheses(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:792: Failed
__________________________ test_unmatched_parentheses __________________________

calc = <claude.Calculator object at 0x1026ff590>

    def test_unmatched_parentheses(calc):
        with pytest.raises(ValueError):
>           calc.calculate("5*(2+3")

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:798: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <claude.Calculator object at 0x1026ff590>, expression = '5*(2+3'

    def calculate(self, expression: str) -> float:
        """
        Evaluates the given mathematical expression and returns the result.
    
        Args:
            expression (str): A string containing a mathematical expression.
                              Example: "2 + 3 * (4 - 1)"
    
        Returns:
            float: The calculated result of the expression.
    
        Raises:
            ValueError: If the expression contains invalid characters or is malformed.
            ZeroDivisionError: If the expression involves division by zero.
            SyntaxError: If the parentheses in the expression are unbalanced.
        """
        # Remove all whitespace from the expression
        expression = expression.replace(" ", "")
    
        if not expression:
            raise ValueError("Expression cannot be empty")
    
        # Check for invalid characters
        valid_chars = set("0123456789+-*/().")
        if any(char not in valid_chars for char in expression):
            raise ValueError("Expression contains invalid characters")
    
        # Check for balanced parentheses
        if not self._check_balanced_parentheses(expression):
>           raise SyntaxError("Unbalanced parentheses in the expression")
E           SyntaxError: Unbalanced parentheses in the expression

generated/code/calculator/1-zero_shot/iteration_5/claude.py:45: SyntaxError
__________________________ test_invalid_double_slash ___________________________

calc = <claude.Calculator object at 0x1027447d0>

    def test_invalid_double_slash(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:802: Failed
_________________________ test_invalid_exponentiation __________________________

calc = <claude.Calculator object at 0x102747ad0>

    def test_invalid_exponentiation(calc):
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py:807: Failed
=========================== short test summary info ============================
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_negative
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_negative_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_multiply_negative
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_multiply_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_multiply_negative_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_multiply_neutral
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_multiply_neutral_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_divide_negative
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_divide_negative_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_divide_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_divide_negative_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_positive
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_positive_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_positive_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_positive_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_multiply_negative_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide_positive_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide_positive_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_add_divide_negative_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide_positive_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide_positive_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_divide_negative_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply_float
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply_positive_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply_positive_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply_negative_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_subtract_multiply_negative_float_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_all_operations
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_general_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_invalid_expression_incomplete_addition
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_invalid_expression_incomplete_multiplication
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_empty_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_unmatched_parentheses
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_invalid_double_slash
FAILED generated/code/calculator/1-zero_shot/iteration_5/5_functional_correctness-claude.py::test_invalid_exponentiation
======================== 43 failed, 45 passed in 0.47s =========================
