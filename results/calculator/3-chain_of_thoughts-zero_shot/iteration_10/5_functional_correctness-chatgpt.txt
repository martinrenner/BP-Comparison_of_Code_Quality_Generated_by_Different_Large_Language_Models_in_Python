Testing module: chatgpt
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 88 items

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py . [  1%]
.............FF......................................................... [ 82%]
....FF.........                                                          [100%]

=================================== FAILURES ===================================
____________________________ test_subtract_negative ____________________________

calc = <chatgpt.Calculator object at 0x104909760>

    def test_subtract_negative(calc):
>       assert calc.calculate("5-+3") == 2

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:32: in calculate
    result = self._evaluate_postfix(postfix)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x104909760>
postfix = [5.0, '-', 3.0, '+']

    def _evaluate_postfix(self, postfix: list) -> float:
        """
        Evaluates a postfix (Reverse Polish Notation) expression and returns the computed result.
    
        Args:
            postfix (list): The list of tokens in postfix order.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ValueError: If the postfix expression is invalid.
            ZeroDivisionError: If division by zero is attempted.
        """
        stack = []
        for token in postfix:
            if isinstance(token, float):
                stack.append(token)
            elif token in self.operators:
                if len(stack) < 2:
>                   raise ValueError(f"Invalid expression: insufficient operands for operator '{token}'.")
E                   ValueError: Invalid expression: insufficient operands for operator '-'.

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:182: ValueError
_________________________ test_subtract_negative_float _________________________

calc = <chatgpt.Calculator object at 0x104905a90>

    def test_subtract_negative_float(calc):
>       assert calc.calculate("5.5-+3.5") == 2

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:32: in calculate
    result = self._evaluate_postfix(postfix)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x104905a90>
postfix = [5.5, '-', 3.5, '+']

    def _evaluate_postfix(self, postfix: list) -> float:
        """
        Evaluates a postfix (Reverse Polish Notation) expression and returns the computed result.
    
        Args:
            postfix (list): The list of tokens in postfix order.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ValueError: If the postfix expression is invalid.
            ZeroDivisionError: If division by zero is attempted.
        """
        stack = []
        for token in postfix:
            if isinstance(token, float):
                stack.append(token)
            elif token in self.operators:
                if len(stack) < 2:
>                   raise ValueError(f"Invalid expression: insufficient operands for operator '{token}'.")
E                   ValueError: Invalid expression: insufficient operands for operator '-'.

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:182: ValueError
___________________________ test_general_parentheses ___________________________

calc = <chatgpt.Calculator object at 0x1049072c0>

    def test_general_parentheses(calc):
        assert calc.calculate("(5+2)*3") == 21
        assert calc.calculate("5*(2+3)") == 25
>       assert calc.calculate("-(5+2)*3") == -21

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py:735: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:32: in calculate
    result = self._evaluate_postfix(postfix)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x1049072c0>
postfix = [5.0, 2.0, '+', 3.0, '*', '-']

    def _evaluate_postfix(self, postfix: list) -> float:
        """
        Evaluates a postfix (Reverse Polish Notation) expression and returns the computed result.
    
        Args:
            postfix (list): The list of tokens in postfix order.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ValueError: If the postfix expression is invalid.
            ZeroDivisionError: If division by zero is attempted.
        """
        stack = []
        for token in postfix:
            if isinstance(token, float):
                stack.append(token)
            elif token in self.operators:
                if len(stack) < 2:
>                   raise ValueError(f"Invalid expression: insufficient operands for operator '{token}'.")
E                   ValueError: Invalid expression: insufficient operands for operator '-'.

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:182: ValueError
___________________________ test_nested_parentheses ____________________________

calc = <chatgpt.Calculator object at 0x104906b10>

    def test_nested_parentheses(calc):
        assert calc.calculate("((2+3)*2)") == 10
        assert calc.calculate("((2+3)*(2+3))") == 25
>       assert calc.calculate("-((2+3)*((2+3)*2))") == -50

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py:746: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:32: in calculate
    result = self._evaluate_postfix(postfix)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatgpt.Calculator object at 0x104906b10>
postfix = [2.0, 3.0, '+', 2.0, 3.0, '+', ...]

    def _evaluate_postfix(self, postfix: list) -> float:
        """
        Evaluates a postfix (Reverse Polish Notation) expression and returns the computed result.
    
        Args:
            postfix (list): The list of tokens in postfix order.
    
        Returns:
            float: The result of the evaluation.
    
        Raises:
            ValueError: If the postfix expression is invalid.
            ZeroDivisionError: If division by zero is attempted.
        """
        stack = []
        for token in postfix:
            if isinstance(token, float):
                stack.append(token)
            elif token in self.operators:
                if len(stack) < 2:
>                   raise ValueError(f"Invalid expression: insufficient operands for operator '{token}'.")
E                   ValueError: Invalid expression: insufficient operands for operator '-'.

generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/chatgpt.py:182: ValueError
=========================== short test summary info ============================
FAILED generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py::test_subtract_negative
FAILED generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py::test_subtract_negative_float
FAILED generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py::test_general_parentheses
FAILED generated/code/calculator/3-chain_of_thoughts-zero_shot/iteration_10/5_functional_correctness-chatgpt.py::test_nested_parentheses
========================= 4 failed, 84 passed in 0.22s =========================
