Testing module: gemini
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 35 items

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py . [  2%]
..F......F...F..FFFFFF.F...FF.F...                                       [100%]

=================================== FAILURES ===================================
___________________________ test_square_wrong_input ____________________________

art = <gemini.AsciiArt object at 0x104514470>

    def test_square_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_square(-1, "*")
        with pytest.raises(ValueError):
            art.draw_square(0, "*")
        with pytest.raises(ValueError):
>           art.draw_square(1.5, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104514470>, width = 1.5, symbol = '*'

    def draw_square(self, width: int, symbol: str) -> str:
        """
        Draws a square of the specified width filled with the given symbol.
    
        Args:
            width (int): The width of the square.
            symbol (str): The symbol to fill the square with.
    
        Returns:
            str: A multi-line string representing the ASCII art square.
    
        Raises:
            ValueError: If input is invalid.
        """
        self._validate_input(symbol, width=width)
>       return '\n'.join([symbol * width for _ in range(width)])
E       TypeError: 'float' object cannot be interpreted as an integer

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:97: TypeError
__________________________ test_rectangle_wrong_input __________________________

art = <gemini.AsciiArt object at 0x104515430>

    def test_rectangle_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_rectangle(-1, 3, "*")
        with pytest.raises(ValueError):
            art.draw_rectangle(3, -1, "*")
        with pytest.raises(ValueError):
            art.draw_rectangle(0, 0, "*")
        with pytest.raises(ValueError):
>           art.draw_rectangle(1.5, 3, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104515430>, width = 1.5, height = 3
symbol = '*'

    def draw_rectangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a rectangle of the specified width and height filled with the given symbol.
    
        Args:
            width (int): The width of the rectangle.
            height (int): The height of the rectangle.
            symbol (str): The symbol to fill the rectangle with.
    
        Returns:
            str: A multi-line string representing the ASCII art rectangle.
    
        Raises:
            ValueError: If input is invalid.
        """
        self._validate_input(symbol, width=width, height=height)
>       return '\n'.join([symbol * width for _ in range(height)])
E       TypeError: can't multiply sequence by non-int of type 'float'

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:115: TypeError
______________________________ test_parallelogram ______________________________

art = <gemini.AsciiArt object at 0x104529310>

    def test_parallelogram(art):
        assert art.draw_parallelogram(10, 5, "*") in {
            "**********\n **********\n  **********\n   **********\n    **********\n",
            "**********\n **********\n  **********\n   **********\n    **********",
        }
>       assert art.draw_parallelogram(11, 6, "X") in {
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n",
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********",
        }
E       AssertionError: assert 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX' in {'***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********', '***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n'}
E        +  where 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX' = draw_parallelogram(11, 6, 'X')
E        +    where draw_parallelogram = <gemini.AsciiArt object at 0x104529310>.draw_parallelogram

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:141: AssertionError
________________________ test_parallelogram_wrong_input ________________________

art = <gemini.AsciiArt object at 0x104529c70>

    def test_parallelogram_wrong_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(-1, 9, "*")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:169: AttributeError
______________________ test_parallelogram_multichar_input ______________________

art = <gemini.AsciiArt object at 0x10452a510>

    def test_parallelogram_multichar_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(5, 9, "abc")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:180: AttributeError
______________________ test_parallelogram_char_contained _______________________

art = <gemini.AsciiArt object at 0x10452af00>

    def test_parallelogram_char_contained(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 8, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:185: AttributeError
_____________________ test_parallelogram_char_only_defined _____________________

art = <gemini.AsciiArt object at 0x10452b8f0>

    def test_parallelogram_char_only_defined(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 7, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:191: AttributeError
________________________________ test_triangle _________________________________

art = <gemini.AsciiArt object at 0x101ad1b20>

    def test_triangle(art):
>       assert art.draw_triangle(9, 3, "*") in {
            "***\n******\n*********",
            "***\n******\n*********\n",
        }

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:199: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x101ad1b20>, width = 9, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle.
    
        Args:
            width (int): The width of the triangle.
            height (int): The height of the triangle
            symbol (str): The symbol to use.
    
        Returns:
            str: Multiline string: ASCII art of the triangle.
    
        Raises:
            ValueError: If input is invalid
        """
        self._validate_input(symbol, width=width, height=height)
        # Ensure that triangle makes sense geometrically.
        if width > height:
>           raise ValueError("For the triangle, height must be == with or greater than width ")
E           ValueError: For the triangle, height must be == with or greater than width

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:156: ValueError
_____________________________ test_triangle_large ______________________________

art = <gemini.AsciiArt object at 0x10452bc50>

    def test_triangle_large(art):
>       assert art.draw_triangle(150, 3, "*") in {
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************",
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************\n",
        }

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:209: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x10452bc50>, width = 150, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle.
    
        Args:
            width (int): The width of the triangle.
            height (int): The height of the triangle
            symbol (str): The symbol to use.
    
        Returns:
            str: Multiline string: ASCII art of the triangle.
    
        Raises:
            ValueError: If input is invalid
        """
        self._validate_input(symbol, width=width, height=height)
        # Ensure that triangle makes sense geometrically.
        if width > height:
>           raise ValueError("For the triangle, height must be == with or greater than width ")
E           ValueError: For the triangle, height must be == with or greater than width

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:156: ValueError
__________________________ test_triangle_wrong_input ___________________________

art = <gemini.AsciiArt object at 0x10452a390>

    def test_triangle_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_triangle(-1, 3, "*")
        with pytest.raises(ValueError):
            art.draw_triangle(0, 0, "*")
        with pytest.raises(ValueError):
>           art.draw_triangle(1.5, 3, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x10452a390>, width = 1.5, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle.
    
        Args:
            width (int): The width of the triangle.
            height (int): The height of the triangle
            symbol (str): The symbol to use.
    
        Returns:
            str: Multiline string: ASCII art of the triangle.
    
        Raises:
            ValueError: If input is invalid
        """
        self._validate_input(symbol, width=width, height=height)
        # Ensure that triangle makes sense geometrically.
        if width > height:
            raise ValueError("For the triangle, height must be == with or greater than width ")
    
        result = []
>       for i in range(1, width + 1):
E       TypeError: 'float' object cannot be interpreted as an integer

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:159: TypeError
_________________________________ test_pyramid _________________________________

art = <gemini.AsciiArt object at 0x104529580>

    def test_pyramid(art):
>       assert art.draw_pyramid(5, "*") in {
            "    *\n   ***\n  *****\n *******\n*********",
            "    *\n   ***\n  *****\n *******\n*********\n",
        }
E       AssertionError: assert '    *    \n   ***   \n  *****  \n ******* \n*********' in {'    *\n   ***\n  *****\n *******\n*********', '    *\n   ***\n  *****\n *******\n*********\n'}
E        +  where '    *    \n   ***   \n  *****  \n ******* \n*********' = draw_pyramid(5, '*')
E        +    where draw_pyramid = <gemini.AsciiArt object at 0x104529580>.draw_pyramid

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:260: AssertionError
______________________________ test_pyramid_large ______________________________

art = <gemini.AsciiArt object at 0x1045287d0>

    def test_pyramid_large(art):
>       assert art.draw_pyramid(100, "*") in {
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************",
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************\n",
        }
E       AssertionError: assert '                                                                                                   *                 ...**********************************************************************************************************************' in {'                                                                                                   *\n              ...*******************************************************************************************************************\n'}
E        +  where '                                                                                                   *                 ...**********************************************************************************************************************' = draw_pyramid(100, '*')
E        +    where draw_pyramid = <gemini.AsciiArt object at 0x1045287d0>.draw_pyramid

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:273: AssertionError
___________________________ test_pyramid_wrong_input ___________________________

art = <gemini.AsciiArt object at 0x104515c40>

    def test_pyramid_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_pyramid(-1, "*")
        with pytest.raises(ValueError):
            art.draw_pyramid(0, "*")
        with pytest.raises(ValueError):
>           art.draw_pyramid(1.5, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py:292: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104515c40>, height = 1.5, symbol = '*'

    def draw_pyramid(self, height: int, symbol: str) -> str:
        """
        Draws a pyramid of the specified height filled with the given symbol.
    
        Args:
            height (int): The height of the pyramid.
            symbol (str): The symbol to fill the pyramid with.
    
        Returns:
            str: A multi-line string representing the ASCII art pyramid.
    
        Raises:
            ValueError: If input is invalid.
        """
        self._validate_input(symbol, height=height)
        result = []
>       for i in range(1, height + 1):
E       TypeError: 'float' object cannot be interpreted as an integer

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/gemini.py:184: TypeError
=========================== short test summary info ============================
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_square_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_rectangle_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_parallelogram
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_parallelogram_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_parallelogram_multichar_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_parallelogram_char_contained
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_parallelogram_char_only_defined
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_triangle
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_triangle_large
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_triangle_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_pyramid
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_pyramid_large
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_3/5_functional_correctness-gemini.py::test_pyramid_wrong_input
======================== 13 failed, 22 passed in 0.11s =========================
