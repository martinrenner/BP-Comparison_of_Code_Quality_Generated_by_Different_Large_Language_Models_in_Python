Testing module: gemini
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 35 items

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py . [  2%]
..F......F...F..FFFFFF.F...FF.F...                                       [100%]

=================================== FAILURES ===================================
___________________________ test_square_wrong_input ____________________________

art = <gemini.AsciiArt object at 0x106b14710>

    def test_square_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_square(-1, "*")
        with pytest.raises(ValueError):
            art.draw_square(0, "*")
        with pytest.raises(ValueError):
>           art.draw_square(1.5, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:181: in draw_square
    self._validate_input(width, symbol)  # Call the validation method
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b14710>, width = 1.5, symbol = '*'
height = None

    def _validate_input(self, width: int, symbol: str, height: int = None) -> None:
        """
        Validates the input parameters.  This is a private helper method.
    
        Args:
            width:  The width of the shape.
            symbol: The symbol to use.
            height: The height of the shape (optional, for shapes like rectangles).
    
        Raises:
            ValueError: If inputs are invalid.
        """
        if not isinstance(width, int) or (height is not None and not isinstance(height, int)):
>           raise TypeError("Width and height must be integers.")
E           TypeError: Width and height must be integers.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:293: TypeError
__________________________ test_rectangle_wrong_input __________________________

art = <gemini.AsciiArt object at 0x106b14fb0>

    def test_rectangle_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_rectangle(-1, 3, "*")
        with pytest.raises(ValueError):
            art.draw_rectangle(3, -1, "*")
        with pytest.raises(ValueError):
            art.draw_rectangle(0, 0, "*")
        with pytest.raises(ValueError):
>           art.draw_rectangle(1.5, 3, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:202: in draw_rectangle
    self._validate_input(width, symbol, height) # Added height validation
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b14fb0>, width = 1.5, symbol = '*'
height = 3

    def _validate_input(self, width: int, symbol: str, height: int = None) -> None:
        """
        Validates the input parameters.  This is a private helper method.
    
        Args:
            width:  The width of the shape.
            symbol: The symbol to use.
            height: The height of the shape (optional, for shapes like rectangles).
    
        Raises:
            ValueError: If inputs are invalid.
        """
        if not isinstance(width, int) or (height is not None and not isinstance(height, int)):
>           raise TypeError("Width and height must be integers.")
E           TypeError: Width and height must be integers.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:293: TypeError
______________________________ test_parallelogram ______________________________

art = <gemini.AsciiArt object at 0x106b2bad0>

    def test_parallelogram(art):
        assert art.draw_parallelogram(10, 5, "*") in {
            "**********\n **********\n  **********\n   **********\n    **********\n",
            "**********\n **********\n  **********\n   **********\n    **********",
        }
>       assert art.draw_parallelogram(11, 6, "X") in {
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n",
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********",
        }
E       AssertionError: assert 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX\n' in {'***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********', '***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n'}
E        +  where 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX\n' = draw_parallelogram(11, 6, 'X')
E        +    where draw_parallelogram = <gemini.AsciiArt object at 0x106b2bad0>.draw_parallelogram

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:141: AssertionError
________________________ test_parallelogram_wrong_input ________________________

art = <gemini.AsciiArt object at 0x106b29130>

    def test_parallelogram_wrong_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(-1, 9, "*")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:169: AttributeError
______________________ test_parallelogram_multichar_input ______________________

art = <gemini.AsciiArt object at 0x106b29820>

    def test_parallelogram_multichar_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(5, 9, "abc")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:180: AttributeError
______________________ test_parallelogram_char_contained _______________________

art = <gemini.AsciiArt object at 0x106b2a150>

    def test_parallelogram_char_contained(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 8, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:185: AttributeError
_____________________ test_parallelogram_char_only_defined _____________________

art = <gemini.AsciiArt object at 0x106b2abd0>

    def test_parallelogram_char_only_defined(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 7, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:191: AttributeError
________________________________ test_triangle _________________________________

art = <gemini.AsciiArt object at 0x106b2b5f0>

    def test_triangle(art):
>       assert art.draw_triangle(9, 3, "*") in {
            "***\n******\n*********",
            "***\n******\n*********\n",
        }

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:199: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b2b5f0>, width = 9, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle.
    
        Args:
            width:  The width of the triangle's base.
            height: The height of the triangle.
            symbol:  The symbol to use.
    
        Returns:
            str: The generated triangle.
    
        Raises:
           ValueError:  If width or height is not positive, or if symbol is invalid.
           Or width and height are different.
        """
        self._validate_input(width, symbol, height)
    
        if width != height:
>           raise ValueError("For a right-angled triangle, width and height must be equal.")
E           ValueError: For a right-angled triangle, width and height must be equal.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:248: ValueError
_____________________________ test_triangle_large ______________________________

art = <gemini.AsciiArt object at 0x106b2bdd0>

    def test_triangle_large(art):
>       assert art.draw_triangle(150, 3, "*") in {
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************",
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************\n",
        }

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:209: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b2bdd0>, width = 150, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle.
    
        Args:
            width:  The width of the triangle's base.
            height: The height of the triangle.
            symbol:  The symbol to use.
    
        Returns:
            str: The generated triangle.
    
        Raises:
           ValueError:  If width or height is not positive, or if symbol is invalid.
           Or width and height are different.
        """
        self._validate_input(width, symbol, height)
    
        if width != height:
>           raise ValueError("For a right-angled triangle, width and height must be equal.")
E           ValueError: For a right-angled triangle, width and height must be equal.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:248: ValueError
__________________________ test_triangle_wrong_input ___________________________

art = <gemini.AsciiArt object at 0x106b2a240>

    def test_triangle_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_triangle(-1, 3, "*")
        with pytest.raises(ValueError):
            art.draw_triangle(0, 0, "*")
        with pytest.raises(ValueError):
>           art.draw_triangle(1.5, 3, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:245: in draw_triangle
    self._validate_input(width, symbol, height)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b2a240>, width = 1.5, symbol = '*'
height = 3

    def _validate_input(self, width: int, symbol: str, height: int = None) -> None:
        """
        Validates the input parameters.  This is a private helper method.
    
        Args:
            width:  The width of the shape.
            symbol: The symbol to use.
            height: The height of the shape (optional, for shapes like rectangles).
    
        Raises:
            ValueError: If inputs are invalid.
        """
        if not isinstance(width, int) or (height is not None and not isinstance(height, int)):
>           raise TypeError("Width and height must be integers.")
E           TypeError: Width and height must be integers.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:293: TypeError
_________________________________ test_pyramid _________________________________

art = <gemini.AsciiArt object at 0x106b28cb0>

    def test_pyramid(art):
>       assert art.draw_pyramid(5, "*") in {
            "    *\n   ***\n  *****\n *******\n*********",
            "    *\n   ***\n  *****\n *******\n*********\n",
        }
E       AssertionError: assert '    *    \n   ***   \n  *****  \n ******* \n*********\n' in {'    *\n   ***\n  *****\n *******\n*********', '    *\n   ***\n  *****\n *******\n*********\n'}
E        +  where '    *    \n   ***   \n  *****  \n ******* \n*********\n' = draw_pyramid(5, '*')
E        +    where draw_pyramid = <gemini.AsciiArt object at 0x106b28cb0>.draw_pyramid

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:260: AssertionError
______________________________ test_pyramid_large ______________________________

art = <gemini.AsciiArt object at 0x106b29d00>

    def test_pyramid_large(art):
>       assert art.draw_pyramid(100, "*") in {
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************",
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************\n",
        }
E       AssertionError: assert '                                                                                                   *                 ...********************************************************************************************************************\n' in {'                                                                                                   *\n              ...*******************************************************************************************************************\n'}
E        +  where '                                                                                                   *                 ...********************************************************************************************************************\n' = draw_pyramid(100, '*')
E        +    where draw_pyramid = <gemini.AsciiArt object at 0x106b29d00>.draw_pyramid

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:273: AssertionError
___________________________ test_pyramid_wrong_input ___________________________

art = <gemini.AsciiArt object at 0x106b14b30>

    def test_pyramid_wrong_input(art):
        with pytest.raises(ValueError):
            art.draw_pyramid(-1, "*")
        with pytest.raises(ValueError):
            art.draw_pyramid(0, "*")
        with pytest.raises(ValueError):
>           art.draw_pyramid(1.5, "*")

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py:292: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:270: in draw_pyramid
    self._validate_input(height, symbol)  # height acts as width for validation
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x106b14b30>, width = 1.5, symbol = '*'
height = None

    def _validate_input(self, width: int, symbol: str, height: int = None) -> None:
        """
        Validates the input parameters.  This is a private helper method.
    
        Args:
            width:  The width of the shape.
            symbol: The symbol to use.
            height: The height of the shape (optional, for shapes like rectangles).
    
        Raises:
            ValueError: If inputs are invalid.
        """
        if not isinstance(width, int) or (height is not None and not isinstance(height, int)):
>           raise TypeError("Width and height must be integers.")
E           TypeError: Width and height must be integers.

generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/gemini.py:293: TypeError
=========================== short test summary info ============================
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_square_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_rectangle_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_parallelogram
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_parallelogram_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_parallelogram_multichar_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_parallelogram_char_contained
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_parallelogram_char_only_defined
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_triangle
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_triangle_large
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_triangle_wrong_input
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_pyramid
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_pyramid_large
FAILED generated/code/ascii_art/4-chain_of_thoughts-few_shot/iteration_1/5_functional_correctness-gemini.py::test_pyramid_wrong_input
======================== 13 failed, 22 passed in 0.12s =========================
