Testing module: gemini
============================= test session starts ==============================
platform darwin -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/martinrenner/Projects/BP
plugins: anyio-4.6.2.post1
collected 35 items

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py . [  2%]
.............F..FFFFFF.....FF...FF                                       [100%]

=================================== FAILURES ===================================
______________________________ test_parallelogram ______________________________

art = <gemini.AsciiArt object at 0x103eee390>

    def test_parallelogram(art):
        assert art.draw_parallelogram(10, 5, "*") in {
            "**********\n **********\n  **********\n   **********\n    **********\n",
            "**********\n **********\n  **********\n   **********\n    **********",
        }
>       assert art.draw_parallelogram(11, 6, "X") in {
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n",
            "***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********",
        }
E       AssertionError: assert 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX' in {'***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********', '***********\n ***********\n  ***********\n   ***********\n    ***********\n     ***********\n'}
E        +  where 'XXXXXXXXXXX\n XXXXXXXXXXX\n  XXXXXXXXXXX\n   XXXXXXXXXXX\n    XXXXXXXXXXX\n     XXXXXXXXXXX' = draw_parallelogram(11, 6, 'X')
E        +    where draw_parallelogram = <gemini.AsciiArt object at 0x103eee390>.draw_parallelogram

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:141: AssertionError
________________________ test_parallelogram_wrong_input ________________________

art = <gemini.AsciiArt object at 0x104c94650>

    def test_parallelogram_wrong_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(-1, 9, "*")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:169: AttributeError
______________________ test_parallelogram_multichar_input ______________________

art = <gemini.AsciiArt object at 0x104c945c0>

    def test_parallelogram_multichar_input(art):
        with pytest.raises(ValueError):
>           art.test_parallelogram(5, 9, "abc")
E           AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:180: AttributeError
______________________ test_parallelogram_char_contained _______________________

art = <gemini.AsciiArt object at 0x104c94920>

    def test_parallelogram_char_contained(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 8, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:185: AttributeError
_____________________ test_parallelogram_char_only_defined _____________________

art = <gemini.AsciiArt object at 0x104c95280>

    def test_parallelogram_char_only_defined(art):
        printable_char = "a"
>       result = art.test_parallelogram(5, 7, printable_char)
E       AttributeError: 'AsciiArt' object has no attribute 'test_parallelogram'. Did you mean: 'draw_parallelogram'?

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:191: AttributeError
________________________________ test_triangle _________________________________

art = <gemini.AsciiArt object at 0x104c95af0>

    def test_triangle(art):
>       assert art.draw_triangle(9, 3, "*") in {
            "***\n******\n*********",
            "***\n******\n*********\n",
        }

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:199: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c95af0>, width = 9, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle
        Args:
            width (int): Width of the triangle.
            height (int): Height of the triangle.
            symbol (str): Symbol to use.
        Returns:
            str: A multi-line string representation of the triangle
        """
        self._validate_input(symbol, width, height)
        if width != height: # right-angled isosceles
>           raise ValueError("Width and height must be equal for a right-angled triangle.")
E           ValueError: Width and height must be equal for a right-angled triangle.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:99: ValueError
_____________________________ test_triangle_large ______________________________

art = <gemini.AsciiArt object at 0x104c96510>

    def test_triangle_large(art):
>       assert art.draw_triangle(150, 3, "*") in {
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************",
            "**************************************************\n****************************************************************************************************\n******************************************************************************************************************************************************\n",
        }

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:209: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c96510>, width = 150, height = 3
symbol = '*'

    def draw_triangle(self, width: int, height: int, symbol: str) -> str:
        """
        Draws a right-angled triangle
        Args:
            width (int): Width of the triangle.
            height (int): Height of the triangle.
            symbol (str): Symbol to use.
        Returns:
            str: A multi-line string representation of the triangle
        """
        self._validate_input(symbol, width, height)
        if width != height: # right-angled isosceles
>           raise ValueError("Width and height must be equal for a right-angled triangle.")
E           ValueError: Width and height must be equal for a right-angled triangle.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:99: ValueError
_________________________________ test_pyramid _________________________________

art = <gemini.AsciiArt object at 0x104c71910>

    def test_pyramid(art):
>       assert art.draw_pyramid(5, "*") in {
            "    *\n   ***\n  *****\n *******\n*********",
            "    *\n   ***\n  *****\n *******\n*********\n",
        }

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:118: in draw_pyramid
    self._validate_input(symbol, height=height)  # Only height is needed for a pyramid
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c71910>, symbol = '*', width = None
height = 5

    def _validate_input(self, symbol: str, width: int = None, height: int = None):
        """
        Validates the input parameters for the drawing functions.
    
        Args:
            symbol (str): The symbol to use for drawing the shape.
            width (int, optional): The width of the shape.
            height (int, optional): The height of the shape.
    
        Raises:
            ValueError: If the symbol is not a single printable character,
                        or if width/height are negative or zero.
        TypeError: If width/height is not provided when required by caller function
        """
    
        if not symbol or len(symbol) != 1 or not symbol.isprintable() or symbol.isspace():
            raise ValueError("Symbol must be a single printable character.")
    
        if width is not None:
            if not isinstance(width, int) or width <= 0:
                raise ValueError("Width must be a positive integer.")
    
        if height is not None:
            if not isinstance(height, int) or height <= 0:
                raise ValueError("Height must be a positive integer.")
    
        if width is None and (height is not None and height>0):
>           raise TypeError("Width must be provided.")
E           TypeError: Width must be provided.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:33: TypeError
______________________________ test_pyramid_large ______________________________

art = <gemini.AsciiArt object at 0x104c971a0>

    def test_pyramid_large(art):
>       assert art.draw_pyramid(100, "*") in {
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************",
            "                                                                                                   *\n                                                                                                  ***\n                                                                                                 *****\n                                                                                                *******\n                                                                                               *********\n                                                                                              ***********\n                                                                                             *************\n                                                                                            ***************\n                                                                                           *****************\n                                                                                          *******************\n                                                                                         *********************\n                                                                                        ***********************\n                                                                                       *************************\n                                                                                      ***************************\n                                                                                     *****************************\n                                                                                    *******************************\n                                                                                   *********************************\n                                                                                  ***********************************\n                                                                                 *************************************\n                                                                                ***************************************\n                                                                               *****************************************\n                                                                              *******************************************\n                                                                             *********************************************\n                                                                            ***********************************************\n                                                                           *************************************************\n                                                                          ***************************************************\n                                                                         *****************************************************\n                                                                        *******************************************************\n                                                                       *********************************************************\n                                                                      ***********************************************************\n                                                                     *************************************************************\n                                                                    ***************************************************************\n                                                                   *****************************************************************\n                                                                  *******************************************************************\n                                                                 *********************************************************************\n                                                                ***********************************************************************\n                                                               *************************************************************************\n                                                              ***************************************************************************\n                                                             *****************************************************************************\n                                                            *******************************************************************************\n                                                           *********************************************************************************\n                                                          ***********************************************************************************\n                                                         *************************************************************************************\n                                                        ***************************************************************************************\n                                                       *****************************************************************************************\n                                                      *******************************************************************************************\n                                                     *********************************************************************************************\n                                                    ***********************************************************************************************\n                                                   *************************************************************************************************\n                                                  ***************************************************************************************************\n                                                 *****************************************************************************************************\n                                                *******************************************************************************************************\n                                               *********************************************************************************************************\n                                              ***********************************************************************************************************\n                                             *************************************************************************************************************\n                                            ***************************************************************************************************************\n                                           *****************************************************************************************************************\n                                          *******************************************************************************************************************\n                                         *********************************************************************************************************************\n                                        ***********************************************************************************************************************\n                                       *************************************************************************************************************************\n                                      ***************************************************************************************************************************\n                                     *****************************************************************************************************************************\n                                    *******************************************************************************************************************************\n                                   *********************************************************************************************************************************\n                                  ***********************************************************************************************************************************\n                                 *************************************************************************************************************************************\n                                ***************************************************************************************************************************************\n                               *****************************************************************************************************************************************\n                              *******************************************************************************************************************************************\n                             *********************************************************************************************************************************************\n                            ***********************************************************************************************************************************************\n                           *************************************************************************************************************************************************\n                          ***************************************************************************************************************************************************\n                         *****************************************************************************************************************************************************\n                        *******************************************************************************************************************************************************\n                       *********************************************************************************************************************************************************\n                      ***********************************************************************************************************************************************************\n                     *************************************************************************************************************************************************************\n                    ***************************************************************************************************************************************************************\n                   *****************************************************************************************************************************************************************\n                  *******************************************************************************************************************************************************************\n                 *********************************************************************************************************************************************************************\n                ***********************************************************************************************************************************************************************\n               *************************************************************************************************************************************************************************\n              ***************************************************************************************************************************************************************************\n             *****************************************************************************************************************************************************************************\n            *******************************************************************************************************************************************************************************\n           *********************************************************************************************************************************************************************************\n          ***********************************************************************************************************************************************************************************\n         *************************************************************************************************************************************************************************************\n        ***************************************************************************************************************************************************************************************\n       *****************************************************************************************************************************************************************************************\n      *******************************************************************************************************************************************************************************************\n     *********************************************************************************************************************************************************************************************\n    ***********************************************************************************************************************************************************************************************\n   *************************************************************************************************************************************************************************************************\n  ***************************************************************************************************************************************************************************************************\n *****************************************************************************************************************************************************************************************************\n*******************************************************************************************************************************************************************************************************\n",
        }

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:118: in draw_pyramid
    self._validate_input(symbol, height=height)  # Only height is needed for a pyramid
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c971a0>, symbol = '*', width = None
height = 100

    def _validate_input(self, symbol: str, width: int = None, height: int = None):
        """
        Validates the input parameters for the drawing functions.
    
        Args:
            symbol (str): The symbol to use for drawing the shape.
            width (int, optional): The width of the shape.
            height (int, optional): The height of the shape.
    
        Raises:
            ValueError: If the symbol is not a single printable character,
                        or if width/height are negative or zero.
        TypeError: If width/height is not provided when required by caller function
        """
    
        if not symbol or len(symbol) != 1 or not symbol.isprintable() or symbol.isspace():
            raise ValueError("Symbol must be a single printable character.")
    
        if width is not None:
            if not isinstance(width, int) or width <= 0:
                raise ValueError("Width must be a positive integer.")
    
        if height is not None:
            if not isinstance(height, int) or height <= 0:
                raise ValueError("Height must be a positive integer.")
    
        if width is None and (height is not None and height>0):
>           raise TypeError("Width must be provided.")
E           TypeError: Width must be provided.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:33: TypeError
_________________________ test_pyramid_char_contained __________________________

art = <gemini.AsciiArt object at 0x104c95220>

    def test_pyramid_char_contained(art):
        printable_char = "a"
>       result = art.draw_pyramid(5, printable_char)

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:118: in draw_pyramid
    self._validate_input(symbol, height=height)  # Only height is needed for a pyramid
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c95220>, symbol = 'a', width = None
height = 5

    def _validate_input(self, symbol: str, width: int = None, height: int = None):
        """
        Validates the input parameters for the drawing functions.
    
        Args:
            symbol (str): The symbol to use for drawing the shape.
            width (int, optional): The width of the shape.
            height (int, optional): The height of the shape.
    
        Raises:
            ValueError: If the symbol is not a single printable character,
                        or if width/height are negative or zero.
        TypeError: If width/height is not provided when required by caller function
        """
    
        if not symbol or len(symbol) != 1 or not symbol.isprintable() or symbol.isspace():
            raise ValueError("Symbol must be a single printable character.")
    
        if width is not None:
            if not isinstance(width, int) or width <= 0:
                raise ValueError("Width must be a positive integer.")
    
        if height is not None:
            if not isinstance(height, int) or height <= 0:
                raise ValueError("Height must be a positive integer.")
    
        if width is None and (height is not None and height>0):
>           raise TypeError("Width must be provided.")
E           TypeError: Width must be provided.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:33: TypeError
________________________ test_pyramid_char_only_defined ________________________

art = <gemini.AsciiArt object at 0x104c943e0>

    def test_pyramid_char_only_defined(art):
        printable_char = "a"
>       result = art.draw_pyramid(5, printable_char)

generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py:310: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:118: in draw_pyramid
    self._validate_input(symbol, height=height)  # Only height is needed for a pyramid
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <gemini.AsciiArt object at 0x104c943e0>, symbol = 'a', width = None
height = 5

    def _validate_input(self, symbol: str, width: int = None, height: int = None):
        """
        Validates the input parameters for the drawing functions.
    
        Args:
            symbol (str): The symbol to use for drawing the shape.
            width (int, optional): The width of the shape.
            height (int, optional): The height of the shape.
    
        Raises:
            ValueError: If the symbol is not a single printable character,
                        or if width/height are negative or zero.
        TypeError: If width/height is not provided when required by caller function
        """
    
        if not symbol or len(symbol) != 1 or not symbol.isprintable() or symbol.isspace():
            raise ValueError("Symbol must be a single printable character.")
    
        if width is not None:
            if not isinstance(width, int) or width <= 0:
                raise ValueError("Width must be a positive integer.")
    
        if height is not None:
            if not isinstance(height, int) or height <= 0:
                raise ValueError("Height must be a positive integer.")
    
        if width is None and (height is not None and height>0):
>           raise TypeError("Width must be provided.")
E           TypeError: Width must be provided.

generated/code/ascii_art/5-role-zero_shot/iteration_6/gemini.py:33: TypeError
=========================== short test summary info ============================
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_parallelogram
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_parallelogram_wrong_input
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_parallelogram_multichar_input
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_parallelogram_char_contained
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_parallelogram_char_only_defined
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_triangle
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_triangle_large
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_pyramid
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_pyramid_large
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_pyramid_char_contained
FAILED generated/code/ascii_art/5-role-zero_shot/iteration_6/5_functional_correctness-gemini.py::test_pyramid_char_only_defined
======================== 11 failed, 24 passed in 0.11s =========================
